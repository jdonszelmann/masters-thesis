Checking hello (/home/jonathan/Documents/projects/thesis/agda/hello.agda).
"\NUL\NUL\SOH\201\NUL\NUL\NUL\NUL\NUL\NUL\SOH\202\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX('\153\US/XU\t\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\150\255\153%\196\133\129\179\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ETX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\SOH\NUL\NUL\NUL\EOT\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX`\246g\171[Pa\143\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\STX\NUL\NUL\NUL\ACK\NUL\NUL\NUL\a\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\b\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STXM{~\184Y\246\128\&2\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\v\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\n\NUL\NUL\NUL\f\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SI\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\SOH\NUL\NUL\NUL\fr\NUL\NUL\NUL\DLE\NUL\NUL\NUL\DLE\NUL\NUL\NUL\ETB\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SUB\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\FS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\GS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\n\NUL\NUL\NUL\EOT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\DC1\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL \NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ACK\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NULe\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\b\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NULj\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\rsf\NUL\NUL\NUL>\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL?\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL+\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NULA\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NULC\NUL\NUL\NUL\EOT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\SOH@\NUL\NUL\NUL\r\NUL\NUL\NUL\DC2\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\SOHC\NUL\NUL\NUL\r\NUL\NUL\NUL\NAK\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NULE\NUL\NUL\NULF\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NULG\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\"\NUL\NUL\NULH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\NULD\NUL\NUL\NULB\NUL\NUL\NULB\NUL\NUL\NULI\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL2\NUL\NUL\NULJ\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\CAN\NUL\NUL\NULK\NUL\NUL\NUL\ff\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ACK\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ACK\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL]\NUL\NUL\NUL^\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL_\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\DC3\NUL\NUL\NUL`\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\NUL\\\NUL\NUL\NUL[\NUL\NUL\NUL[\NUL\NUL\NULa\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\ESC\NUL\NUL\NULb\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\CAN\NUL\NUL\NULc\NUL\NUL\NUL\b\NUL\NUL\NUL\SOH\NUL\NUL\NUL\FS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NULd\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\"\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NULf\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL3\NUL\NUL\NUL\f\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL/\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL4\NUL\NUL\NUL\EOT\NUL\NUL\NUL\ACK\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NULi\NUL\NUL\NULj\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NULk\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\DC3\NUL\NUL\NULl\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\NULh\NUL\NUL\NULg\NUL\NUL\NULg\NUL\NUL\NULm\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\ESC\NUL\NUL\NULn\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\CAN\NUL\NUL\NULo\NUL\NUL\NUL\n\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NULp\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\SUB\NUL\NUL\NULb\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NULC\NUL\NUL\NUL\f\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\GS\NUL\NUL\NUL\STX\NUL\NUL\NUL\ETX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\"\NUL\NUL\NUL\STX\NUL\NUL\NUL\b\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NULt\NUL\NUL\NULu\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NULv\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\DC3\NUL\NUL\NULw\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\NULs\NUL\NUL\NUL\DLE\NUL\NUL\NUL\DLE\NUL\NUL\NULx\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NULr\NUL\NUL\NULy\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\CAN\NUL\NUL\NULz\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL{\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\NUL\DLE\NUL\NUL\NUL|\NUL\NUL\NULg\NUL\NUL\NULq\NUL\NUL\NUL[\NUL\NUL\NULe\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NULr\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL~\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL[\NUL\NUL\NUL\DEL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NULc\NUL\NUL\NULz\NUL\NUL\NULo\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL}\NUL\NUL\NUL\128\NUL\NUL\NUL\129\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\SOH\NUL\NUL\NUL\130\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NULX\NUL\NUL\NUL\131\NUL\NUL\NULT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\ESC\NUL\NUL\NUL\FS\NUL\NUL\NUL\132\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\ESC\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\DLE\NUL\NUL\NUL|\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NULz\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\135\NUL\NUL\NUL\SOH\NUL\NUL\NUL\136\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\SOH\NUL\NUL\NUL\137\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NULX\NUL\NUL\NUL\138\NUL\NUL\NULT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NULr\NUL\NUL\NUL\134\NUL\NUL\NUL\139\NUL\NUL\NUL\SOH\NUL\NUL\NUL\FS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\af\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\155\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\t\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\157\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\159\NUL\NUL\NUL\EOT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\STXO\NUL\NUL\NUL\ETB\NUL\NUL\NUL\ETX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\STXT\NUL\NUL\NUL\ETB\NUL\NUL\NUL\b\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\161\NUL\NUL\NUL\162\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\163\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\"\NUL\NUL\NUL\164\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\NUL\160\NUL\NUL\NUL\158\NUL\NUL\NUL\158\NUL\NUL\NUL\165\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL2\NUL\NUL\NUL\166\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\CAN\NUL\NUL\NUL\167\NUL\NUL\NUL\v\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\168\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\CAN\NUL\NUL\NUL;\NUL\NUL\NUL\f\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\170\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\157\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\172\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\n\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\174\NUL\NUL\NUL\EOT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\SOH\155\NUL\NUL\NUL\DLE\NUL\NUL\NUL\FS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\SOH\159\NUL\NUL\NUL\DLE\NUL\NUL\NUL \NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\176\NUL\NUL\NUL\177\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\178\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\"\NUL\NUL\NUL\179\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\NUL\175\NUL\NUL\NUL\173\NUL\NUL\NUL\173\NUL\NUL\NUL\180\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL2\NUL\NUL\NUL\181\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\CAN\NUL\NUL\NUL\182\NUL\NUL\NUL\f\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\183\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\n\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\185\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\186\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\f\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\188\NUL\NUL\NUL\EOT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\SOH\192\NUL\NUL\NUL\DC1\NUL\NUL\NUL\FS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\SOH\197\NUL\NUL\NUL\DC1\NUL\NUL\NUL!\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\190\NUL\NUL\NUL\191\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\192\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\"\NUL\NUL\NUL\193\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\NUL\189\NUL\NUL\NUL\187\NUL\NUL\NUL\187\NUL\NUL\NUL\194\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL2\NUL\NUL\NUL\195\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\CAN\NUL\NUL\NUL\196\NUL\NUL\NUL\f\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\197\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\CAN\NUL\NUL\NULK\NUL\NUL\NUL\f\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\199\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\f\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\201\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\b\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\203\NUL\NUL\NUL\EOT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\SOHw\NUL\NUL\NUL\SI\NUL\NUL\NUL\SYN\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\SOH{\NUL\NUL\NUL\SI\NUL\NUL\NUL\SUB\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\205\NUL\NUL\NUL\206\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\207\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\"\NUL\NUL\NUL\208\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\NUL\204\NUL\NUL\NUL\202\NUL\NUL\NUL\202\NUL\NUL\NUL\209\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL2\NUL\NUL\NUL\210\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\CAN\NUL\NUL\NUL\211\NUL\NUL\NUL\fn\NUL\NUL\NUL \NUL\NUL\NUL\a\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\218\NUL\NUL\NUL\219\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\220\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\"\NUL\NUL\NUL\221\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\NUL\217\NUL\NUL\NUL\215\NUL\NUL\NUL\215\NUL\NUL\NUL\222\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL2\NUL\NUL\NUL\223\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\CAN\NUL\NUL\NUL\224\NUL\NUL\NUL\f\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\225\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\r\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\227\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\228\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\DLE\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\230\NUL\NUL\NUL\EOT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\STX\246\NUL\NUL\NUL\US\NUL\NUL\NUL\ETX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\STX\251\NUL\NUL\NUL\US\NUL\NUL\NUL\b\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\232\NUL\NUL\NUL\233\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\234\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\"\NUL\NUL\NUL\235\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\NUL\231\NUL\NUL\NUL\229\NUL\NUL\NUL\229\NUL\NUL\NUL\236\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL2\NUL\NUL\NUL\237\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\CAN\NUL\NUL\NUL\238\NUL\NUL\NUL\f\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\239\NUL\NUL\NUL\NUL\NUL\NUL\NUL\DC2\NUL\NUL\NUL\229\NUL\NUL\NUL\240\NUL\NUL\NUL\215\NUL\NUL\NUL\226\NUL\NUL\NUL\202\NUL\NUL\NUL\213\NUL\NUL\NULB\NUL\NUL\NUL\200\NUL\NUL\NUL\187\NUL\NUL\NUL\198\NUL\NUL\NUL\173\NUL\NUL\NUL\184\NUL\NUL\NUL\RS\NUL\NUL\NUL\171\NUL\NUL\NUL\158\NUL\NUL\NUL\169\NUL\NUL\NUL\143\NUL\NUL\NUL\156\NUL\NUL\NUL\NUL\NUL\NUL\NUL\t\NUL\NUL\NULK\NUL\NUL\NUL;\NUL\NUL\NUL\211\NUL\NUL\NUL\182\NUL\NUL\NUL\196\NUL\NUL\NUL\167\NUL\NUL\NUL\238\NUL\NUL\NUL\224\NUL\NUL\NUL\154\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\241\NUL\NUL\NUL\SOH\NUL\NUL\NUL\242\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\SOH\NUL\NUL\NUL\243\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NULX\NUL\NUL\NUL\244\NUL\NUL\NULT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL2\NUL\NUL\NUL\FS\NUL\NUL\NUL\245\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\b\NUL\NUL\NUL2\NUL\NUL\NUL\246\NUL\NUL\NULr\NUL\NUL\NUL\140\NUL\NUL\NUL\ESC\NUL\NUL\NUL\133\NUL\NUL\NUL\SOH\NUL\NUL\NULW\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\ESC\NUL\NUL\NUL\247\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NULr\NUL\NUL\NUL\FS\NUL\NUL\NUL\ESC\NUL\NUL\NUL\FS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SI\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\250\NUL\NUL\NUL\fn\208\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\ACK\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\n\NUL\NUL\SOH\a\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ETX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\SOH\NUL\NUL\SOH\a\NUL\NUL\SOH\t\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\n\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL*\NUL\NUL\NUL\ETX\NUL\NUL\NUL\b\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL/\NUL\NUL\NUL\ETX\NUL\NUL\NUL\r\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH\f\NUL\NUL\SOH\r\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH\v\NUL\NUL\SOH\SI\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\SOH\b\NUL\NUL\NUL!\NUL\NUL\NUL!\NUL\NUL\SOH\DLE\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL)\NUL\NUL\SOH\a\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL9\NUL\NUL\NUL\ETX\NUL\NUL\NUL\ETB\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH\r\NUL\NUL\SOH\DC3\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\DC4\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH\v\NUL\NUL\SOH\NAK\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\SOH\DC2\NUL\NUL\NUL,\NUL\NUL\NUL,\NUL\NUL\SOH\SYN\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NULC\NUL\NUL\SOH\a\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\DLE\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\EM\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\SOH\SUB\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL@\NUL\NUL\NUL\ETX\NUL\NUL\NUL\RS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH\DC3\NUL\NUL\SOH\FS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\GS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH\v\NUL\NUL\SOH\RS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\SOH\CAN\NUL\NUL\SOH\ESC\NUL\NUL\SOH\ESC\NUL\NUL\SOH\US\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\SOH\DC1\NUL\NUL\SOH\ETB\NUL\NUL\SOH \NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\203\NUL\NUL\SOH\a\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL \NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\SOH#\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\150\NUL\NUL\NUL\ACK\NUL\NUL\NUL\SYN\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\151\NUL\NUL\NUL\ACK\NUL\NUL\NUL\ETB\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH%\NUL\NUL\SOH&\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH'\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH\v\NUL\NUL\SOH(\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\SOH\"\NUL\NUL\SOH$\NUL\NUL\SOH$\NUL\NUL\SOH)\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH!\NUL\NUL\SOH*\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\ETX\NUL\NUL\SOH+\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\185\NUL\NUL\SOH,\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\SOH\SOH\NUL\NUL\SOH\ENQ\NUL\NUL\NUL\SO\NUL\NUL\NUL\SOH\NUL\NUL\SOH-\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\ETX\NUL\NUL\NULcz\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\EOT\NUL\NUL\SOHD\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOHE\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH\SOH\NUL\NUL\SOH0\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOHG\NUL\NUL\NUL\NUL\NUL\NUL\NUL\f\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\SOH;\NUL\NUL\SOHC\NUL\NUL\SOHF\NUL\NUL\SOHH\NUL\NUL\NUL\SO\NUL\NUL\NUL\FS\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SI\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOHI\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH\SOH\NUL\NUL\NUL\DC2\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOHK\NUL\NUL\SOHK\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOHL\NUL\NUL\SOHE\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOHM\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NULc\NUL\NUL\NUL\NUL\NUL\NUL\NUL\DLE\NUL\NUL\NUL\SOH\NUL\NUL\SOHJ\NUL\NUL\SOHN\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\n\NUL\NUL\NUL\SO\NUL\NUL\NUL\SOH\NUL\NUL\NUL\FS\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\SOHO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\DC3\NUL\NUL\SOH\SOH\NUL\NUL\NUL\255\NUL\NUL\SOH7\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\STX\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\SO\NUL\NUL\NUL\STX\NUL\NUL\NUL\SO\NUL\NUL\SOHP\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\f\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\DC3\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOHS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\SOHT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\SOHR\NUL\NUL\SOHU\NUL\NUL\SOHU\NUL\NUL\NUL\STX\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\ESC\NUL\NUL\SOHV\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\ba\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SYN\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOHb\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\SOHc\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\SOH\226\NUL\NUL\NUL\ETB\NUL\NUL\NUL\SYN\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\SOH\NUL\NUL\SOH\231\NUL\NUL\NUL\ETB\NUL\NUL\NUL\ESC\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOHe\NUL\NUL\SOHf\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOHg\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH\v\NUL\NUL\SOHh\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ACK\NUL\NUL\SOHa\NUL\NUL\SOHd\NUL\NUL\SOHd\NUL\NUL\SOHi\NUL\NUL\NUL\EM\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH!\NUL\NUL\SOHj\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH\SOH\NUL\NUL\NUL\FS\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOHl\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOHm\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\ETX\NUL\NUL\SOHk\NUL\NUL\SOHn\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOHX\NUL\NUL\SOHo\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\SOH]\NUL\NUL\SOH`\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\SOHp\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\NAK\NUL\NUL\SOH0\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\ENQ\NUL\NUL\SOHq\NUL\NUL\SOHr\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOHX\NUL\NUL\SOHs\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\DC4\NUL\NUL\SOHt\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\ENQ\NUL\NUL\SOH\\\NUL\NUL\SOHu\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOHX\NUL\NUL\SOHv\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\SOH\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\SOH\NUL\NUL\SOHw\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\DC2\NUL\NUL\SOH4\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\ENQ\NUL\NUL\SOHx\NUL\NUL\SOHy\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOHX\NUL\NUL\SOHz\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\SI\NUL\NUL\SOH{\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\ENQ\NUL\NUL\SOH.\NUL\NUL\SOH|\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOHX\NUL\NUL\SOH}\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\DC2\NUL\NUL\SOH9\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOHxfn\NUL\NUL\NUL\SO\NUL\NUL\NUL\SOH\NUL\NUL\NUL\FS\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\SOHO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\DC3\NUL\NUL\SOH\SOH\NUL\NUL\SOHW\NUL\NUL\SOH~\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\SO\NUL\NUL\NUL\STX\NUL\NUL\NUL\SO\NUL\NUL\SOH\143\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\EOT\NUL\NUL\SOHD\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\145\NUL\NUL\NUL\NUL\NUL\NUL\NUL\fn\NUL\NUL\NUL\SO\NUL\NUL\NUL\SOH\NUL\NUL\NUL\FS\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\DC3\NUL\NUL\SOH\SOH\NUL\NUL\NULo\NUL\NUL\SOH0\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ETX\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\SO\NUL\NUL\NUL\SO\NUL\NUL\NUL\STX\NUL\NUL\NUL\SO\NUL\NUL\SOH\151\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOHW\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\255\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\SOH\153\NUL\NUL\SOH\154\NUL\NUL\NUL\NUL\NUL\NUL\NUL\f\NUL\NUL\NUL\EOT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOHD\NUL\NUL\NULc\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\SOH\155\NUL\NUL\NUL\FS\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\DC3\NUL\NUL\SOH\SOH\NUL\NUL\NULz\NUL\NUL\SOH0\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\SO\NUL\NUL\NUL\SO\NUL\NUL\NUL\STX\NUL\NUL\NUL\SO\NUL\NUL\SOH\156\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\a\NUL\NUL\SOH\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL)\NUL\NUL\SOH\158\NUL\NUL\NUL\NUL\NUL\NUL\NUL\v\NUL\NUL\NUL\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\136\NUL\NUL\SOH\STX\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\DC3\NUL\NUL\SOH\SOH\NUL\NUL\NULc\NUL\NUL\SOH\159\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\SO\NUL\NUL\NUL\SO\NUL\NUL\NUL\STX\NUL\NUL\NUL\SO\NUL\NUL\SOH\160\NUL\NUL\NUL\NUL\NUL\NUL\NUL\n\NUL\NUL\NULc\NUL\NUL\SOH\161\NUL\NUL\NULz\NUL\NUL\SOH\157\NUL\NUL\NULo\NUL\NUL\SOH\152\NUL\NUL\SOHW\NUL\NUL\SOH\144\NUL\NUL\NUL\255\NUL\NUL\SOHQ\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\249\NUL\NUL\SOH\162\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\GS\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ETB\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\ENQ\NUL\NUL\NUL \NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\165\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\DC2\NUL\NUL\NUL\ACK\NUL\NUL\NUL\SOH\NUL\NUL\NULY\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\167\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\SOH\166\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ETB\NUL\NUL\SOH\168\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\FS\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ETB\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\141\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\ENQ\NUL\NUL\SOH\171\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\172\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\ACK\NUL\NUL\SOH@\NUL\NUL\NUL\SO\NUL\NUL\NUL+\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\174\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\SOH\173\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ETB\NUL\NUL\SOH\175\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\DC1\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\177\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\CAN\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\DC2\NUL\NUL\NUL\GS\NUL\NUL\NUL\SOH\NUL\NUL\SOH\179\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\180\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\SOH\178\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ETB\NUL\NUL\SOH\181\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\DC2\NUL\NUL\NUL\ACK\NUL\NUL\NUL\SO\NUL\NUL\NULY\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\183\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\SOH\166\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ETB\NUL\NUL\SOH\184\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETX\NUL\NUL\NUL\ENQ\NUL\NUL\NULA\NUL\NUL\NUL\SO\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\186\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\DC2\NUL\NUL\NUL/\NUL\NUL\NUL\SOH\NUL\NUL\NUL\"\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\188\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\SOH\187\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ETB\NUL\NUL\SOH\189\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\DC2\NUL\NUL\NUL/\NUL\NUL\NUL\SO\NUL\NUL\NUL\"\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\191\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\SOH\187\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ETB\NUL\NUL\SOH\192\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\DC2\NUL\NUL\NUL\GS\NUL\NUL\NUL\SO\NUL\NUL\SOH\179\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\SOH\194\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQ\NUL\NUL\SOH\178\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ETB\NUL\NUL\SOH\195\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL*\NUL\NUL\NULH\NUL\NUL\NULM\NUL\NUL\SOH\196\NUL\NUL\NULF\NUL\NUL\NULG\NUL\NUL\SOH\170\NUL\NUL\NUL@\NUL\NUL\NULE\NUL\NUL\SOH\193\NUL\NUL\NUL7\NUL\NUL\NUL?\NUL\NUL\SOH\185\NUL\NUL\NUL5\NUL\NUL\NUL6\NUL\NUL\SOH\170\NUL\NUL\NUL/\NUL\NUL\NUL4\NUL\NUL\SOH\190\NUL\NUL\NUL%\NUL\NUL\NUL-\NUL\NUL\SOH\185\NUL\NUL\NUL#\NUL\NUL\NUL$\NUL\NUL\SOH\170\NUL\NUL\NUL\GS\NUL\NUL\NUL\"\NUL\NUL\SOH\182\NUL\NUL\NUL\NAK\NUL\NUL\NUL\SUB\NUL\NUL\SOH\164\NUL\NUL\NUL\DC1\NUL\NUL\NUL\DC4\NUL\NUL\SOH\176\NUL\NUL\NUL\SI\NUL\NUL\NUL\DLE\NUL\NUL\SOH\170\NUL\NUL\NUL\ACK\NUL\NUL\NUL\SO\NUL\NUL\SOH\169\NUL\NUL\NUL\SOH\NUL\NUL\NUL\ENQ\NUL\NUL\SOH\164\NUL\NUL\NUL\NUL\NUL\NUL\NUL^\NUL\NUL\NUL_\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\STX\NUL\NUL\NUL\ETX\NUL\NUL\NUL\EOT\NUL\NUL\NUL\ENQ\NUL\NUL\NUL\ACK\NUL\NUL\NUL\a\NUL\NUL\NUL\b\NUL\NUL\NUL\t\NUL\NUL\NUL\n\NUL\NUL\NUL\v\NUL\NUL\NUL\f\NUL\NUL\NUL\r`nt\NUL\NUL\NUL\ESC\NUL\NUL\NUL\DC2\NUL\NUL\NUL\SOH\NUL\NUL\NUL\248\NUL\NUL\SOH\163\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\SOH\197\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\SOH\200\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EM\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQhello\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOTProp\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOTAgda\NUL\NUL\NUL\NUL\NUL\NUL\NUL\tPrimitive\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETXSet\NUL\NUL\NUL\NUL\NUL\NUL\NUL\bGreeting\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQgreet\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\226\138\148\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQLevel\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOTSSet\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQSSet\207\137\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOTSet\207\137\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOTlsuc\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQlzero\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SItransp-Greeting\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ETXphi\NUL\NUL\NUL\NUL\NUL\NUL\NUL\aCubical\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOHI\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH_\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOhcomp-Greeting\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOHi\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOHo\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQIsOne\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOGreeting.hello\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NULLdata Greeting : Set where\n  hello : Greeting\n\ngreet : Greeting\ngreet = hello\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOT\NUL\NUL\NUL\NUL\NUL\NUL\NUL\EOTAgda\NUL\NUL\NUL\NUL\NUL\NUL\NUL\tPrimitive\NUL\NUL\NUL\NUL\NUL\NUL\NUL\ENQhello\NUL\NUL\NUL\NUL\NUL\NUL\NUL\aCubical\NUL\NUL\NUL\NUL\NUL\NUL\NUL\STX\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\SOH\SOH\SOH\NUL\NUL\NUL\NUL\NUL\NUL\NUL\a\NUL\NUL\NUL\NUL\NUL\NUL\CAN\255\255\255\255\255\255\255\206"
Interface
  source hash: 2893449644826187017
  source:
    data Greeting : Set where
  hello : Greeting

greet : Greeting
greet = hello
  file type: AgdaFileType
  imported modules: [(TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]},6986885857580966287)]
  module name: hello
  top-level module name: hello
  scope: fromList []
  inside scope: ScopeInfo {_scopeCurrent = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, _scopeModules = fromList [(MName {mnameToList = []},Scope {scopeName = MName {mnameToList = []}, scopeParents = [], scopeNameSpaces = [(PrivateNS,NameSpace {nsNames = fromList [(Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 6 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 345, posLine = 14, posCol = 18}, iEnd = Pn {srcFile = (), posPos = 349, posLine = 14, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = PrimName, anameLineage = Opened (Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}))) Defined, anameMetadata = NoMetadata}]),(Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 320, posLine = 13, posCol = 18}, iEnd = Pn {srcFile = (), posPos = 323, posLine = 13, posCol = 21}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = PrimName, anameLineage = Opened (Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}))) Defined, anameMetadata = NoMetadata}])], nsModules = fromList [], nsInScope = fromList [QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 320, posLine = 13, posCol = 18}, iEnd = Pn {srcFile = (), posPos = 323, posLine = 13, posCol = 21}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 6 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 345, posLine = 14, posCol = 18}, iEnd = Pn {srcFile = (), posPos = 349, posLine = 14, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}]}),(PublicNS,NameSpace {nsNames = fromList [], nsModules = fromList [], nsInScope = fromList []}),(ImportedNS,NameSpace {nsNames = fromList [], nsModules = fromList [], nsInScope = fromList []})], scopeImports = fromList [(Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []})),MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]})], scopeDatatypeModule = Nothing}),(MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]},Scope {scopeName = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, scopeParents = [MName {mnameToList = []}], scopeNameSpaces = [(PrivateNS,NameSpace {nsNames = fromList [], nsModules = fromList [], nsInScope = fromList []}),(PublicNS,NameSpace {nsNames = fromList [(Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = DataName, anameLineage = Defined, anameMetadata = GeneralizedVarsMetadata (fromList [])}]),(Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 6 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = FunName, anameLineage = Defined, anameMetadata = NoMetadata}]),(Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = ConName, anameLineage = Defined, anameMetadata = NoMetadata}])], nsModules = fromList [(Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []},[AbsModule {amodName = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, amodLineage = Defined}])], nsInScope = fromList [QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 6 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}]}),(ImportedNS,NameSpace {nsNames = fromList [], nsModules = fromList [], nsInScope = fromList []})], scopeImports = fromList [], scopeDatatypeModule = Nothing}),(MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]},Scope {scopeName = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, scopeParents = [MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]},MName {mnameToList = []}], scopeNameSpaces = [(PrivateNS,NameSpace {nsNames = fromList [], nsModules = fromList [], nsInScope = fromList []}),(PublicNS,NameSpace {nsNames = fromList [(Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = ConName, anameLineage = Defined, anameMetadata = NoMetadata}])], nsModules = fromList [], nsInScope = fromList [QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}]}),(ImportedNS,NameSpace {nsNames = fromList [], nsModules = fromList [], nsInScope = fromList []})], scopeImports = fromList [], scopeDatatypeModule = Just IsDataModule}),(MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]},Scope {scopeName = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, scopeParents = [MName {mnameToList = []}], scopeNameSpaces = [(PrivateNS,NameSpace {nsNames = fromList [], nsModules = fromList [], nsInScope = fromList []}),(PublicNS,NameSpace {nsNames = fromList [(Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Hole :| [Id "\8852",Hole]},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 26 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Hole :| [Id "\8852",Hole]}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Hole :| [Id "\8852",Hole]}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 804, posLine = 33, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 807, posLine = 33, posCol = 6}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Related 6.0, fixityAssoc = LeftAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = PrimName, anameLineage = Defined, anameMetadata = NoMetadata}]),(Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Level" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 14 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Level" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Level" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 591, posLine = 23, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 596, posLine = 23, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = AxiomName, anameLineage = Defined, anameMetadata = NoMetadata}]),(Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 6 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 345, posLine = 14, posCol = 18}, iEnd = Pn {srcFile = (), posPos = 349, posLine = 14, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = PrimName, anameLineage = Defined, anameMetadata = NoMetadata}]),(Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 10 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 411, posLine = 16, posCol = 28}, iEnd = Pn {srcFile = (), posPos = 415, posLine = 16, posCol = 32}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = PrimName, anameLineage = Defined, anameMetadata = NoMetadata}]),(Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet\969" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 12 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet\969" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet\969" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 448, posLine = 17, posCol = 28}, iEnd = Pn {srcFile = (), posPos = 453, posLine = 17, posCol = 33}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = PrimName, anameLineage = Defined, anameMetadata = NoMetadata}]),(Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 320, posLine = 13, posCol = 18}, iEnd = Pn {srcFile = (), posPos = 323, posLine = 13, posCol = 21}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = PrimName, anameLineage = Defined, anameMetadata = NoMetadata}]),(Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set\969" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 8 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set\969" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set\969" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 375, posLine = 15, posCol = 22}, iEnd = Pn {srcFile = (), posPos = 379, posLine = 15, posCol = 26}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = PrimName, anameLineage = Defined, anameMetadata = NoMetadata}]),(Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lsuc" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 20 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lsuc" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lsuc" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 774, posLine = 32, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 778, posLine = 32, posCol = 7}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = PrimName, anameLineage = Defined, anameMetadata = NoMetadata}]),(Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lzero" :| []},[AbsName {anameName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 16 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lzero" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lzero" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 758, posLine = 31, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 763, posLine = 31, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, anameKind = PrimName, anameLineage = Defined, anameMetadata = NoMetadata}])], nsModules = fromList [], nsInScope = fromList [QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 320, posLine = 13, posCol = 18}, iEnd = Pn {srcFile = (), posPos = 323, posLine = 13, posCol = 21}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 6 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 345, posLine = 14, posCol = 18}, iEnd = Pn {srcFile = (), posPos = 349, posLine = 14, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 8 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set\969" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set\969" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 375, posLine = 15, posCol = 22}, iEnd = Pn {srcFile = (), posPos = 379, posLine = 15, posCol = 26}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 10 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 411, posLine = 16, posCol = 28}, iEnd = Pn {srcFile = (), posPos = 415, posLine = 16, posCol = 32}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 12 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet\969" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet\969" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 448, posLine = 17, posCol = 28}, iEnd = Pn {srcFile = (), posPos = 453, posLine = 17, posCol = 33}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 14 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Level" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Level" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 591, posLine = 23, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 596, posLine = 23, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 16 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lzero" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lzero" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 758, posLine = 31, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 763, posLine = 31, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 20 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lsuc" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lsuc" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 774, posLine = 32, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 778, posLine = 32, posCol = 7}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 26 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Hole :| [Id "\8852",Hole]}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Hole :| [Id "\8852",Hole]}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 804, posLine = 33, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 807, posLine = 33, posCol = 6}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Related 6.0, fixityAssoc = LeftAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}]}),(ImportedNS,NameSpace {nsNames = fromList [], nsModules = fromList [], nsInScope = fromList []})], scopeImports = fromList [], scopeDatatypeModule = Nothing})], _scopeVarsToBind = [], _scopeLocals = [], _scopePrecedence = [], _scopeInverseName = fromList [(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},NameMapEntry {qnameKind = DataName, qnameConcrete = QName (Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}) :| []}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},NameMapEntry {qnameKind = ConName, qnameConcrete = Qual (Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}) (QName (Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []})) :| [QName (Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []})]}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 320, posLine = 13, posCol = 18}, iEnd = Pn {srcFile = (), posPos = 323, posLine = 13, posCol = 21}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},NameMapEntry {qnameKind = PrimName, qnameConcrete = Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}))) :| [QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []})]}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 6 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},NameMapEntry {qnameKind = FunName, qnameConcrete = QName (Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}) :| []}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 6 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 345, posLine = 14, posCol = 18}, iEnd = Pn {srcFile = (), posPos = 349, posLine = 14, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},NameMapEntry {qnameKind = PrimName, qnameConcrete = Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}))) :| [QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []})]}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 8 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set\969" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set\969" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 375, posLine = 15, posCol = 22}, iEnd = Pn {srcFile = (), posPos = 379, posLine = 15, posCol = 26}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},NameMapEntry {qnameKind = PrimName, qnameConcrete = Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set\969" :| []}))) :| []}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 10 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 411, posLine = 16, posCol = 28}, iEnd = Pn {srcFile = (), posPos = 415, posLine = 16, posCol = 32}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},NameMapEntry {qnameKind = PrimName, qnameConcrete = Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet" :| []}))) :| []}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 12 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet\969" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet\969" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 448, posLine = 17, posCol = 28}, iEnd = Pn {srcFile = (), posPos = 453, posLine = 17, posCol = 33}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},NameMapEntry {qnameKind = PrimName, qnameConcrete = Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet\969" :| []}))) :| []}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 14 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Level" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Level" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 591, posLine = 23, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 596, posLine = 23, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},NameMapEntry {qnameKind = AxiomName, qnameConcrete = Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Level" :| []}))) :| []}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 16 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lzero" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lzero" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 758, posLine = 31, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 763, posLine = 31, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},NameMapEntry {qnameKind = PrimName, qnameConcrete = Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lzero" :| []}))) :| []}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 20 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lsuc" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lsuc" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 774, posLine = 32, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 778, posLine = 32, posCol = 7}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},NameMapEntry {qnameKind = PrimName, qnameConcrete = Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lsuc" :| []}))) :| []}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 26 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Hole :| [Id "\8852",Hole]}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Hole :| [Id "\8852",Hole]}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 804, posLine = 33, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 807, posLine = 33, posCol = 6}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Related 6.0, fixityAssoc = LeftAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},NameMapEntry {qnameKind = PrimName, qnameConcrete = Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Hole :| [Id "\8852",Hole]}))) :| []})], _scopeInverseModule = fromList [(MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]},[QName (Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []})]),(MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]},[Qual (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}) (QName (Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}))])], _scopeInScope = fromList [QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 320, posLine = 13, posCol = 18}, iEnd = Pn {srcFile = (), posPos = 323, posLine = 13, posCol = 21}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 6 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 6 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Prop" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 345, posLine = 14, posCol = 18}, iEnd = Pn {srcFile = (), posPos = 349, posLine = 14, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 8 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set\969" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Set\969" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 375, posLine = 15, posCol = 22}, iEnd = Pn {srcFile = (), posPos = 379, posLine = 15, posCol = 26}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 10 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 411, posLine = 16, posCol = 28}, iEnd = Pn {srcFile = (), posPos = 415, posLine = 16, posCol = 32}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 12 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet\969" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "SSet\969" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 448, posLine = 17, posCol = 28}, iEnd = Pn {srcFile = (), posPos = 453, posLine = 17, posCol = 33}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 14 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Level" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Level" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 591, posLine = 23, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 596, posLine = 23, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 16 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lzero" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lzero" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 758, posLine = 31, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 763, posLine = 31, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 20 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lsuc" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "lsuc" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 774, posLine = 32, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 778, posLine = 32, posCol = 7}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 101, posLine = 5, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 106, posLine = 5, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 115, posLine = 5, posCol = 22}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 26 (ModuleNameHash 10880583612240331187), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Hole :| [Id "\8852",Hole]}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Hole :| [Id "\8852",Hole]}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 804, posLine = 33, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 807, posLine = 33, posCol = 6}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Related 6.0, fixityAssoc = LeftAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}], _scopeFixities = fromList [], _scopePolarities = fromList []}
  signature: Sig {_sigSections = fromList [(MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]},Section {_secTelescope = EmptyTel}),(MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]},Section {_secTelescope = EmptyTel})], _sigDefinitions = fromList [(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 15 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "transp-Greeting" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "transp-Greeting" :| []}, nameBindingSite = NoRange, nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},Defn {defArgInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, defName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 15 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "transp-Greeting" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "transp-Greeting" :| []}, nameBindingSite = NoRange, nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, defType = El {_getSort = Type (Max 0 []), unEl = Pi (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Just (WithOrigin {woOrigin = Inserted, woThing = Ranged {rangeOf = NoRange, rangedThing = "phi"}}), domIsFinite = False, domTactic = Nothing, unDom = El {_getSort = IntervalUniv, unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 42, posLine = 3, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 4 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}, iEnd = Pn {srcFile = (), posPos = 64, posLine = 3, posCol = 30}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 8 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "I" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "I" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 150, posLine = 6, posCol = 22}, iEnd = Pn {srcFile = (), posPos = 151, posLine = 6, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}) (Abs "phi" El {_getSort = Type (Max 0 []), unEl = Pi (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Nothing, domIsFinite = False, domTactic = Nothing, unDom = El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}) (NoAbs "_" El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []})})}, defPolarity = [], defArgOccurrences = [], defArgGeneralizable = NoGeneralizableArgs, defGeneralizedParams = [], defDisplay = [], defMutual = MutId 2, defCompiledRep = fromList [], defInstance = Nothing, defCopy = False, defMatchable = fromList [], defNoCompilation = True, defInjective = False, defCopatternLHS = False, defBlocked = NotBlocked {blockingStatus = ReallyNotBlocked, ignoreBlocking = ()}, defLanguage = WithK, theDef = FunctionDefn (FunctionData {_funClauses = [Clause {clauseLHSRange = NoRange, clauseFullRange = NoRange, clauseTel = ExtendTel (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Just (WithOrigin {woOrigin = Inserted, woThing = Ranged {rangeOf = NoRange, rangedThing = "phi"}}), domIsFinite = False, domTactic = Nothing, unDom = El {_getSort = IntervalUniv, unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 42, posLine = 3, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 4 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}, iEnd = Pn {srcFile = (), posPos = 64, posLine = 3, posCol = 30}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 8 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "I" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "I" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 150, posLine = 6, posCol = 22}, iEnd = Pn {srcFile = (), posPos = 151, posLine = 6, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}) (Abs "phi" ExtendTel (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Nothing, domIsFinite = False, domTactic = Nothing, unDom = El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}) (Abs "_" EmptyTel)), namedClausePats = [Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = Named {nameOf = Just (WithOrigin {woOrigin = Inserted, woThing = Ranged {rangeOf = NoRange, rangedThing = "phi"}}), namedThing = VarP (PatternInfo {patOrigin = PatOSystem, patAsNames = []}) (DBPatVar {dbPatVarName = "_", dbPatVarIndex = 1})}},Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = Named {nameOf = Nothing, namedThing = VarP (PatternInfo {patOrigin = PatOSystem, patAsNames = []}) (DBPatVar {dbPatVarName = "_", dbPatVarIndex = 0})}}], clauseBody = Just (Con (ConHead {conName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, conDataRecord = IsData, conInductive = Inductive, conFields = []}) ConOSystem []), clauseType = Just (Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}), clauseCatchall = False, clauseExact = Just True, clauseRecursive = Nothing, clauseUnreachable = Just False, clauseEllipsis = NoEllipsis, clauseWhereModule = Nothing}], _funCompiled = Just (Done [Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = "_"},Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = "_"}] (Con (ConHead {conName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, conDataRecord = IsData, conInductive = Inductive, conFields = []}) ConOSystem [])), _funSplitTree = Nothing, _funTreeless = Nothing, _funCovering = [], _funInv = NotInjective, _funMutual = Nothing, _funAbstr = ConcreteDef, _funDelayed = NotDelayed, _funProjection = Left MaybeProjection, _funErasure = False, _funFlags = fromList [], _funTerminates = Just True, _funExtLam = Nothing, _funWith = Nothing, _funIsKanOp = Just (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}})})}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 1 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hcomp-Greeting" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hcomp-Greeting" :| []}, nameBindingSite = NoRange, nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},Defn {defArgInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, defName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 1 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hcomp-Greeting" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hcomp-Greeting" :| []}, nameBindingSite = NoRange, nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, defType = El {_getSort = SSet (Max 0 []), unEl = Pi (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Just (WithOrigin {woOrigin = Inserted, woThing = Ranged {rangeOf = NoRange, rangedThing = "phi"}}), domIsFinite = False, domTactic = Nothing, unDom = El {_getSort = IntervalUniv, unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 42, posLine = 3, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 4 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}, iEnd = Pn {srcFile = (), posPos = 64, posLine = 3, posCol = 30}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 8 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "I" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "I" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 150, posLine = 6, posCol = 22}, iEnd = Pn {srcFile = (), posPos = 151, posLine = 6, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}) (Abs "phi" El {_getSort = SSet (Max 0 []), unEl = Pi (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Nothing, domIsFinite = False, domTactic = Nothing, unDom = El {_getSort = SSet (Max 0 []), unEl = Pi (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Just (WithOrigin {woOrigin = Inserted, woThing = Ranged {rangeOf = NoRange, rangedThing = "i"}}), domIsFinite = False, domTactic = Nothing, unDom = El {_getSort = IntervalUniv, unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 42, posLine = 3, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 4 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}, iEnd = Pn {srcFile = (), posPos = 64, posLine = 3, posCol = 30}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 8 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "I" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "I" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 150, posLine = 6, posCol = 22}, iEnd = Pn {srcFile = (), posPos = 151, posLine = 6, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}) (Abs "i" El {_getSort = SSet (Max 0 []), unEl = Pi (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Irrelevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Just (WithOrigin {woOrigin = Inserted, woThing = Ranged {rangeOf = NoRange, rangedThing = "o"}}), domIsFinite = True, domTactic = Nothing, unDom = El {_getSort = SSet (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 42, posLine = 3, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 4 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}, iEnd = Pn {srcFile = (), posPos = 64, posLine = 3, posCol = 30}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 20 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "IsOne" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "IsOne" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 482, posLine = 23, posCol = 22}, iEnd = Pn {srcFile = (), posPos = 487, posLine = 23, posCol = 27}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) [Apply (Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = Var 1 []})]}}) (Abs "o" El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []})})}}) (NoAbs "_" El {_getSort = Type (Max 0 []), unEl = Pi (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Nothing, domIsFinite = False, domTactic = Nothing, unDom = El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}) (NoAbs "_" El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []})})})}, defPolarity = [], defArgOccurrences = [], defArgGeneralizable = NoGeneralizableArgs, defGeneralizedParams = [], defDisplay = [], defMutual = MutId 1, defCompiledRep = fromList [], defInstance = Nothing, defCopy = False, defMatchable = fromList [], defNoCompilation = True, defInjective = False, defCopatternLHS = False, defBlocked = NotBlocked {blockingStatus = ReallyNotBlocked, ignoreBlocking = ()}, defLanguage = WithK, theDef = FunctionDefn (FunctionData {_funClauses = [Clause {clauseLHSRange = NoRange, clauseFullRange = NoRange, clauseTel = ExtendTel (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Just (WithOrigin {woOrigin = Inserted, woThing = Ranged {rangeOf = NoRange, rangedThing = "phi"}}), domIsFinite = False, domTactic = Nothing, unDom = El {_getSort = IntervalUniv, unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 42, posLine = 3, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 4 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}, iEnd = Pn {srcFile = (), posPos = 64, posLine = 3, posCol = 30}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 8 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "I" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "I" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 150, posLine = 6, posCol = 22}, iEnd = Pn {srcFile = (), posPos = 151, posLine = 6, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}) (Abs "phi" ExtendTel (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Nothing, domIsFinite = False, domTactic = Nothing, unDom = El {_getSort = SSet (Max 0 []), unEl = Pi (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Just (WithOrigin {woOrigin = Inserted, woThing = Ranged {rangeOf = NoRange, rangedThing = "i"}}), domIsFinite = False, domTactic = Nothing, unDom = El {_getSort = IntervalUniv, unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 42, posLine = 3, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 4 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}, iEnd = Pn {srcFile = (), posPos = 64, posLine = 3, posCol = 30}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 8 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "I" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "I" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 150, posLine = 6, posCol = 22}, iEnd = Pn {srcFile = (), posPos = 151, posLine = 6, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}) (Abs "i" El {_getSort = SSet (Max 0 []), unEl = Pi (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Irrelevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Just (WithOrigin {woOrigin = Inserted, woThing = Ranged {rangeOf = NoRange, rangedThing = "o"}}), domIsFinite = True, domTactic = Nothing, unDom = El {_getSort = SSet (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Agda" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 42, posLine = 3, posCol = 8}, iEnd = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Primitive" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 3, posCol = 13}, iEnd = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 4 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Cubical" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 57, posLine = 3, posCol = 23}, iEnd = Pn {srcFile = (), posPos = 64, posLine = 3, posCol = 30}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 20 (ModuleNameHash 17266683046914518736), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "IsOne" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "IsOne" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/.cabal/store/ghc-9.0.2/Agda-2.6.4-2aac5e644df671ffb92205a9df9ab6e156c516b4fb28341489ac71df7fdd8638/share/lib/prim/Agda/Primitive/Cubical.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 17266683046914518736, moduleNameParts = "Agda" :| ["Primitive","Cubical"]})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 482, posLine = 23, posCol = 22}, iEnd = Pn {srcFile = (), posPos = 487, posLine = 23, posCol = 27}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) [Apply (Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = Var 1 []})]}}) (Abs "o" El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []})})}}) (Abs "_" ExtendTel (Dom {domInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, domName = Nothing, domIsFinite = False, domTactic = Nothing, unDom = El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}) (Abs "_" EmptyTel))), namedClausePats = [Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = Named {nameOf = Just (WithOrigin {woOrigin = Inserted, woThing = Ranged {rangeOf = NoRange, rangedThing = "phi"}}), namedThing = VarP (PatternInfo {patOrigin = PatOSystem, patAsNames = []}) (DBPatVar {dbPatVarName = "_", dbPatVarIndex = 2})}},Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = Named {nameOf = Nothing, namedThing = VarP (PatternInfo {patOrigin = PatOSystem, patAsNames = []}) (DBPatVar {dbPatVarName = "_", dbPatVarIndex = 1})}},Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = Named {nameOf = Nothing, namedThing = VarP (PatternInfo {patOrigin = PatOSystem, patAsNames = []}) (DBPatVar {dbPatVarName = "_", dbPatVarIndex = 0})}}], clauseBody = Just (Con (ConHead {conName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, conDataRecord = IsData, conInductive = Inductive, conFields = []}) ConOSystem []), clauseType = Just (Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}), clauseCatchall = False, clauseExact = Just True, clauseRecursive = Nothing, clauseUnreachable = Just False, clauseEllipsis = NoEllipsis, clauseWhereModule = Nothing}], _funCompiled = Just (Done [Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = "_"},Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = "_"},Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = "_"}] (Con (ConHead {conName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, conDataRecord = IsData, conInductive = Inductive, conFields = []}) ConOSystem [])), _funSplitTree = Nothing, _funTreeless = Nothing, _funCovering = [], _funInv = NotInjective, _funMutual = Nothing, _funAbstr = ConcreteDef, _funDelayed = NotDelayed, _funProjection = Left MaybeProjection, _funErasure = False, _funFlags = fromList [], _funTerminates = Just True, _funExtLam = Nothing, _funWith = Nothing, _funIsKanOp = Just (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}})})}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 6 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},Defn {defArgInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, defName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 6 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameInScope = InScope, nameNameParts = Id "greet" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 47, posLine = 4, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 52, posLine = 4, posCol = 6}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, defType = El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 55, posLine = 4, posCol = 9}, iEnd = Pn {srcFile = (), posPos = 63, posLine = 4, posCol = 17}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 55, posLine = 4, posCol = 9}, iEnd = Pn {srcFile = (), posPos = 63, posLine = 4, posCol = 17}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}, defPolarity = [], defArgOccurrences = [], defArgGeneralizable = NoGeneralizableArgs, defGeneralizedParams = [], defDisplay = [], defMutual = MutId 3, defCompiledRep = fromList [], defInstance = Nothing, defCopy = False, defMatchable = fromList [], defNoCompilation = False, defInjective = False, defCopatternLHS = False, defBlocked = NotBlocked {blockingStatus = ReallyNotBlocked, ignoreBlocking = ()}, defLanguage = WithK, theDef = FunctionDefn (FunctionData {_funClauses = [Clause {clauseLHSRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 64, posLine = 5, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 69, posLine = 5, posCol = 6}}]), clauseFullRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 64, posLine = 5, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 69, posLine = 5, posCol = 6}},Interval {iStart = Pn {srcFile = (), posPos = 72, posLine = 5, posCol = 9}, iEnd = Pn {srcFile = (), posPos = 77, posLine = 5, posCol = 14}}]), clauseTel = EmptyTel, namedClausePats = [], clauseBody = Just (Con (ConHead {conName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 72, posLine = 5, posCol = 9}, iEnd = Pn {srcFile = (), posPos = 77, posLine = 5, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 72, posLine = 5, posCol = 9}, iEnd = Pn {srcFile = (), posPos = 77, posLine = 5, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, conDataRecord = IsData, conInductive = Inductive, conFields = []}) ConOCon []), clauseType = Just (Arg {argInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, unArg = El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 55, posLine = 4, posCol = 9}, iEnd = Pn {srcFile = (), posPos = 63, posLine = 4, posCol = 17}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 55, posLine = 4, posCol = 9}, iEnd = Pn {srcFile = (), posPos = 63, posLine = 4, posCol = 17}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}}), clauseCatchall = False, clauseExact = Just True, clauseRecursive = Just False, clauseUnreachable = Just False, clauseEllipsis = NoEllipsis, clauseWhereModule = Nothing}], _funCompiled = Just (Done [] (Con (ConHead {conName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 72, posLine = 5, posCol = 9}, iEnd = Pn {srcFile = (), posPos = 77, posLine = 5, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 72, posLine = 5, posCol = 9}, iEnd = Pn {srcFile = (), posPos = 77, posLine = 5, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, conDataRecord = IsData, conInductive = Inductive, conFields = []}) ConOCon [])), _funSplitTree = Just (SplittingDone {splitBindings = 0}), _funTreeless = Nothing, _funCovering = [], _funInv = NotInjective, _funMutual = Nothing, _funAbstr = ConcreteDef, _funDelayed = NotDelayed, _funProjection = Left MaybeProjection, _funErasure = False, _funFlags = fromList [], _funTerminates = Just True, _funExtLam = Nothing, _funWith = Nothing, _funIsKanOp = Nothing})}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},Defn {defArgInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, defName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, defType = El {_getSort = Type (Max 0 []), unEl = Def (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 37, posLine = 2, posCol = 11}, iEnd = Pn {srcFile = (), posPos = 45, posLine = 2, posCol = 19}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 37, posLine = 2, posCol = 11}, iEnd = Pn {srcFile = (), posPos = 45, posLine = 2, posCol = 19}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}) []}, defPolarity = [], defArgOccurrences = [], defArgGeneralizable = NoGeneralizableArgs, defGeneralizedParams = [], defDisplay = [], defMutual = MutId 0, defCompiledRep = fromList [], defInstance = Nothing, defCopy = False, defMatchable = fromList [], defNoCompilation = False, defInjective = False, defCopatternLHS = False, defBlocked = NotBlocked {blockingStatus = ReallyNotBlocked, ignoreBlocking = ()}, defLanguage = WithK, theDef = ConstructorDefn (ConstructorData {_conPars = 0, _conArity = 0, _conSrcCon = ConHead {conName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, conDataRecord = IsData, conInductive = Inductive, conFields = []}, _conData = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, _conAbstr = ConcreteDef, _conInd = Inductive, _conComp = CompKit {nameOfHComp = Just (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 1 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hcomp-Greeting" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hcomp-Greeting" :| []}, nameBindingSite = NoRange, nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}), nameOfTransp = Just (QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 15 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "transp-Greeting" :| []}, nameCanonical = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "transp-Greeting" :| []}, nameBindingSite = NoRange, nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}})}, _conProj = Just [], _conForced = [], _conErased = Nothing, _conErasure = False})}),(QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}},Defn {defArgInfo = ArgInfo {argInfoHiding = NotHidden, argInfoModality = Modality {modRelevance = Relevant, modQuantity = Quantityω QωInferred, modCohesion = Continuous}, argInfoOrigin = UserWritten, argInfoFreeVariables = UnknownFVs, argInfoAnnotation = Annotation {annLock = IsNotLock}}, defName = QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}, defType = El {_getSort = Type (Max 1 []), unEl = Sort (Type (Max 0 []))}, defPolarity = [], defArgOccurrences = [], defArgGeneralizable = NoGeneralizableArgs, defGeneralizedParams = [], defDisplay = [], defMutual = MutId 0, defCompiledRep = fromList [], defInstance = Nothing, defCopy = False, defMatchable = fromList [], defNoCompilation = False, defInjective = False, defCopatternLHS = False, defBlocked = NotBlocked {blockingStatus = ReallyNotBlocked, ignoreBlocking = ()}, defLanguage = WithK, theDef = DatatypeDefn (DatatypeData {_dataPars = 0, _dataIxs = 0, _dataClause = Nothing, _dataCons = [QName {qnameModule = MName {mnameToList = [Name {nameId = NameId 0 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}, iEnd = Pn {srcFile = (), posPos = 1, posLine = 1, posCol = 1}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False},Name {nameId = NameId 2 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = NoRange, nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameInScope = InScope, nameNameParts = Id "Greeting" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 6, posLine = 1, posCol = 6}, iEnd = Pn {srcFile = (), posPos = 14, posLine = 1, posCol = 14}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}]}, qnameName = Name {nameId = NameId 4 (ModuleNameHash 5583195493304270898), nameConcrete = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameCanonical = Name {nameRange = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameInScope = InScope, nameNameParts = Id "hello" :| []}, nameBindingSite = Range (Just (RangeFile {rangeFilePath = AbsolutePath {textPath = "/home/jonathan/Documents/projects/thesis/agda/hello.agda"}, rangeFileName = Just (TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []})})) (fromList [Interval {iStart = Pn {srcFile = (), posPos = 29, posLine = 2, posCol = 3}, iEnd = Pn {srcFile = (), posPos = 34, posLine = 2, posCol = 8}}]), nameFixity = Fixity' {theFixity = Fixity {fixityRange = NoRange, fixityLevel = Unrelated, fixityAssoc = NonAssoc}, theNotation = [], theNameRange = NoRange}, nameIsRecordName = False}}], _dataSort = Type (Max 0 []), _dataMutual = Nothing, _dataAbstr = ConcreteDef, _dataPathCons = [], _dataTranspIx = Nothing, _dataTransp = Nothing})})], _sigRewriteRules = fromList []}
  meta-variables: fromList []
  display: fromList []
  user warnings: fromList []
  import warning: Nothing
  builtin: fromList []
  Foreign code: fromList []
  highlighting: RangeMap {rangeMap = fromList [(1,PairInt (5 :!: Aspects {aspect = Just Keyword, otherAspects = fromList [], note = "", definitionSite = Nothing, tokenBased = TokenBased})),(6,PairInt (14 :!: Aspects {aspect = Just (Name (Just Datatype) False), otherAspects = fromList [], note = "", definitionSite = Just (DefinitionSite {defSiteModule = TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []}, defSitePos = 6, defSiteHere = True, defSiteAnchor = Just "Greeting"}), tokenBased = NotOnlyTokenBased})),(15,PairInt (16 :!: Aspects {aspect = Just Symbol, otherAspects = fromList [], note = "", definitionSite = Nothing, tokenBased = TokenBased})),(17,PairInt (20 :!: Aspects {aspect = Just (Name (Just Primitive) False), otherAspects = fromList [], note = "", definitionSite = Just (DefinitionSite {defSiteModule = TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 10880583612240331187, moduleNameParts = "Agda" :| ["Primitive"]}, defSitePos = 320, defSiteHere = False, defSiteAnchor = Just "Set"}), tokenBased = NotOnlyTokenBased})),(21,PairInt (26 :!: Aspects {aspect = Just Keyword, otherAspects = fromList [], note = "", definitionSite = Nothing, tokenBased = TokenBased})),(29,PairInt (34 :!: Aspects {aspect = Just (Name (Just (Constructor Inductive)) False), otherAspects = fromList [], note = "", definitionSite = Just (DefinitionSite {defSiteModule = TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []}, defSitePos = 29, defSiteHere = True, defSiteAnchor = Just "Greeting.hello"}), tokenBased = NotOnlyTokenBased})),(35,PairInt (36 :!: Aspects {aspect = Just Symbol, otherAspects = fromList [], note = "", definitionSite = Nothing, tokenBased = TokenBased})),(37,PairInt (45 :!: Aspects {aspect = Just (Name (Just Datatype) False), otherAspects = fromList [], note = "", definitionSite = Just (DefinitionSite {defSiteModule = TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []}, defSitePos = 6, defSiteHere = False, defSiteAnchor = Just "Greeting"}), tokenBased = NotOnlyTokenBased})),(47,PairInt (52 :!: Aspects {aspect = Just (Name (Just Function) False), otherAspects = fromList [], note = "", definitionSite = Just (DefinitionSite {defSiteModule = TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []}, defSitePos = 47, defSiteHere = True, defSiteAnchor = Just "greet"}), tokenBased = NotOnlyTokenBased})),(53,PairInt (54 :!: Aspects {aspect = Just Symbol, otherAspects = fromList [], note = "", definitionSite = Nothing, tokenBased = TokenBased})),(55,PairInt (63 :!: Aspects {aspect = Just (Name (Just Datatype) False), otherAspects = fromList [], note = "", definitionSite = Just (DefinitionSite {defSiteModule = TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []}, defSitePos = 6, defSiteHere = False, defSiteAnchor = Just "Greeting"}), tokenBased = NotOnlyTokenBased})),(64,PairInt (69 :!: Aspects {aspect = Just (Name (Just Function) False), otherAspects = fromList [], note = "", definitionSite = Just (DefinitionSite {defSiteModule = TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []}, defSitePos = 47, defSiteHere = False, defSiteAnchor = Just "greet"}), tokenBased = NotOnlyTokenBased})),(70,PairInt (71 :!: Aspects {aspect = Just Symbol, otherAspects = fromList [], note = "", definitionSite = Nothing, tokenBased = TokenBased})),(72,PairInt (77 :!: Aspects {aspect = Just (Name (Just (Constructor Inductive)) False), otherAspects = fromList [], note = "", definitionSite = Just (DefinitionSite {defSiteModule = TopLevelModuleName {moduleNameRange = NoRange, moduleNameId = ModuleNameHash 5583195493304270898, moduleNameParts = "hello" :| []}, defSitePos = 29, defSiteHere = False, defSiteAnchor = Just "Greeting.hello"}), tokenBased = NotOnlyTokenBased}))]}
  library pragma options: []
  file pragma options: []
  options used: PragmaOptions {optShowImplicit = False, optShowIrrelevant = False, optUseUnicode = UnicodeOk, optVerbose = Nothing, optProfiling = ProfileOpts {unProfileOpts = fromList []}, optProp = False, optTwoLevel = Default, optAllowUnsolved = False, optAllowIncompleteMatch = False, optDisablePositivity = False, optTerminationCheck = True, optTerminationDepth = 0, optUniverseCheck = True, optOmegaInOmega = False, optCumulativity = False, optSizedTypes = Default, optGuardedness = Default, optInjectiveTypeConstructors = False, optUniversePolymorphism = True, optIrrelevantProjections = False, optExperimentalIrrelevance = False, optWithoutK = Default, optCubicalCompatible = Default, optCopatterns = True, optPatternMatching = True, optExactSplit = False, optHiddenArgumentPuns = False, optEta = True, optForcing = True, optProjectionLike = True, optErasure = False, optErasedMatches = Default, optEraseRecordParameters = False, optRewriting = False, optCubical = Nothing, optGuarded = False, optFirstOrder = False, optPostfixProjections = False, optKeepPatternVariables = False, optInferAbsurdClauses = True, optInstanceSearchDepth = 500, optOverlappingInstances = False, optQualifiedInstances = True, optInversionMaxDepth = 50, optSafe = False, optDoubleCheck = False, optSyntacticEquality = Nothing, optWarningMode = WarningMode {_warningSet = fromList [OptionRenamed_,OverlappingTokensWarning_,UnsupportedAttribute_,MultipleAttributes_,LibUnknownField_,EmptyAbstract_,EmptyConstructor_,EmptyField_,EmptyGeneralize_,EmptyInstance_,EmptyMacro_,EmptyMutual_,EmptyPostulate_,EmptyPrimitive_,EmptyPrivate_,EmptyRewritePragma_,EmptyWhere_,HiddenGeneralize_,InvalidCatchallPragma_,InvalidConstructor_,InvalidConstructorBlock_,InvalidCoverageCheckPragma_,InvalidNoPositivityCheckPragma_,InvalidNoUniverseCheckPragma_,InvalidRecordDirective_,InvalidTerminationCheckPragma_,MissingDeclarations_,MissingDefinitions_,NotAllowedInMutual_,OpenPublicAbstract_,OpenPublicPrivate_,PolarityPragmasButNotPostulates_,PragmaCompiled_,PragmaNoTerminationCheck_,UnknownNamesInFixityDecl_,UnknownNamesInPolarityPragmas_,UselessAbstract_,UselessInstance_,UselessPrivate_,AbsurdPatternRequiresNoRHS_,AsPatternShadowsConstructorOrPatternSynonym_,CantGeneralizeOverSorts_,ClashesViaRenaming_,CoverageIssue_,DeprecationWarning_,DuplicateUsing_,FixityInRenamingModule_,GenericNonFatalError_,GenericUseless_,GenericWarning_,IllformedAsClause_,InstanceArgWithExplicitArg_,InstanceWithExplicitArg_,InstanceNoOutputTypeName_,InversionDepthReached_,ModuleDoesntExport_,NoGuardednessFlag_,NotInScope_,NotStrictlyPositive_,UnsupportedIndexedMatch_,OldBuiltin_,PlentyInHardCompileTimeMode_,PragmaCompileErased_,RewriteMaybeNonConfluent_,RewriteNonConfluent_,RewriteAmbiguousRules_,RewriteMissingRule_,SafeFlagEta_,SafeFlagInjective_,SafeFlagNoCoverageCheck_,SafeFlagNonTerminating_,SafeFlagNoPositivityCheck_,SafeFlagNoUniverseCheck_,SafeFlagPolarity_,SafeFlagPostulate_,SafeFlagPragma_,SafeFlagTerminating_,SafeFlagWithoutKFlagPrimEraseEquality_,TerminationIssue_,UnreachableClauses_,UnsolvedConstraints_,UnsolvedInteractionMetas_,UnsolvedMetaVariables_,UselessHiding_,UselessInline_,UselessPatternDeclarationForRecord_,UselessPublic_,UserWarning_,WithoutKFlagPrimEraseEquality_,WrongInstanceDeclaration_,CoInfectiveImport_,InfectiveImport_,DuplicateFieldsWarning_,TooManyFieldsWarning_], _warn2Error = False}, optCompileNoMain = False, optCaching = True, optCountClusters = False, optAutoInline = False, optPrintPatternSynonyms = True, optFastReduce = True, optCallByName = False, optConfluenceCheck = Nothing, optCohesion = False, optFlatSplit = Default, optImportSorts = True, optLoadPrimitives = True, optAllowExec = False, optSaveMetas = Default, optShowIdentitySubstitutions = False, optKeepCoveringClauses = False}
  pattern syns: fromList []
  warnings: []
  partial definitions: fromList []
